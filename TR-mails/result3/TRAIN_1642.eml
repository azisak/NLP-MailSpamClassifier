Re: C programming questionFrom nobody Mon Sep 10 16:48:17 2018 Content-Type: Text/Plain; charset="utf-8" Content-Transfer-Encoding: quoted-printable On Thursday 15 April 2010 13:56:00 Stephen Powell wrote: On Wed, 14 Apr 2010 23:10:55 -0400 (EDT), Boyd Stephen Smith Jr. wrote: On Tuesday 13 April 2010 17:16:03 Stephen Powell wrote: What I need to do is to have two structures overlay each other; so that they occupy the same storage. To be specific, here is a structure which describes the volume label for an OS-formatted disk: struct __attribute__ ((packed)) volume_label { char volkey[4]; /* volume key =3D volume label */ ... }; And here is a structure which describes the volume label for a CMS-formatted disk: struct __attribute__ ((packed)) cms_label { char label_id[4]; /* Label identifier */ ... }; union any_label { struct volume_label vl; struct cms_label cl; }; Note that both structures have as their first member a character variable of length 4. In the case of the "volume_label" structure it = is "volkey" and in the case of the "cms_label" structure it is "label_id"= =2E=20 If the value of this variable is "VOL1" (in EBCDIC) then it is the fir= st structure which maps the storage. If the value of this variable is "CMS1" (in EBCDIC) then it is the second structure which maps the storage. union any_label *label =3D /* Initialize somehow */; struct volume_label *maybe_vl =3D  /* Or any other member. */ How do I do this? (Man, I wish I knew C!) Examples above good? Please let me know if I can provide further assistanc= e. =2D-=20 Boyd Stephen Smith Jr. ,=3D ,-_-. =3D. bss@iguanasuicide.net ((_/)o o(\_)) ICQ: 514984 YM/AIM: DaTwinkDaddy `-'(. .)`-' http://iguanasuicide.net/ \_/ 